{
  "contractName": "SecurityToken",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "distributeDividends",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "accumulativeDividendOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawDividend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RTOKEN_DECIMALS",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "dividendOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "withdrawableDividendOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "withdrawnDividendOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "reason",
          "type": "uint8"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CheckStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "DividendsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "DividendWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_service",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"distributeDividends\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RTOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_service\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"reason\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CheckStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"_service()\":{\"details\":\"This function *MUST NOT* memoize the `RegulatorService` address.  This would     break the ability to upgrade the `RegulatorService`.\",\"return\":\"The `RegulatorService` that manages this token.\"},\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"return\":\"The amount of dividend in wei that `_owner` has earned in total.\"},\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"constructor\":{\"params\":{\"_name\":\"Name of the token: See DetailedERC20\",\"_registry\":\"Address of `ServiceRegistry` contract\",\"_symbol\":\"Symbol of the token: See DetailedERC20\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"distributeDividends()\":{\"details\":\"It reverts if the total supply of tokens is 0. It emits the `DividendsDistributed` event if the amount of received ether is greater than 0. About undistributed ether:   In each distribution, there is a small amount of ether not distributed,     the magnified amount of which is     `(msg.value * magnitude) % totalSupply()`.   With a well-chosen `magnitude`, the amount of undistributed ether     (de-magnified) in a distribution can be less than 1 wei.   We can actually keep track of the undistributed ether in a distribution     and try to distribute it in the next distribution,     but keeping track of such data on-chain costs much more than     the saved ether, so we don't do that.\"},\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"return\":\"The amount of dividend in wei that `_owner` can withdraw.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the receiver\",\"_value\":\"The number of tokens to transfer\"},\"return\":\"`true` if successful and `false` if unsuccessful\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\",\"_value\":\"The number of tokens to transfer\"},\"return\":\"`true` if successful and `false` if unsuccessful\"},\"withdrawDividend()\":{\"details\":\"It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\"},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"return\":\"The amount of dividend in wei that `_owner` can withdraw.\"},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"return\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"userdoc\":{\"methods\":{\"_service()\":{\"notice\":\"Retreives the address of the `RegulatorService` that manages this token.\"},\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"constructor\":\"Constructor\",\"distributeDividends()\":{\"notice\":\"Distributes ether to token holders as dividends.\"},\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"transfer(address,uint256)\":{\"notice\":\"ERC-20 overridden function that include logic to check for trade validity.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"ERC-20 overridden function that include logic to check for trade validity.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"notice\":\"An ERC-20 token that has the ability to check for trade validity\"}},\"settings\":{\"compilationTarget\":{\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/SecurityToken.sol\":\"SecurityToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/DividendEngine.sol\":{\"keccak256\":\"0xdeac5fd02124c083437a05b9498c29c4224ebfd25d221bb4db24b4c6c462fe59\",\"urls\":[\"bzzr://0ab753ca0dee1f53cfbed0f4484cab34e481c5574b68220a51c810464b6ad180\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/DividendPayingTokenInterface.sol\":{\"keccak256\":\"0xd389599c87fceb08223d509ddfa178be93a935fe24db634646b83b2bf56599a4\",\"urls\":[\"bzzr://dc0c4b5a4b97673352744febcda036fad00b480ee31cdd96d48598847cb2549c\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/ERC20.sol\":{\"keccak256\":\"0x9ba7bcaeaefcd1e79469e412bb8dfa39fe7228347a2ba59a306294eacb748956\",\"urls\":[\"bzzr://61311075275af1a9f5a95ca71b7c37b0475afa6ecbbfa15b98151aa59d59d412\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzzr://f280f38d5ab6e1b89fd898ccd3901054a56572c141d91d30302e2db1db4cc6ff\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/ERC20Mintable.sol\":{\"keccak256\":\"0x2c82b37188d2b9996dd9b56f83bd90ac5291b87be18dafec919071bd71b3c5aa\",\"urls\":[\"bzzr://0f156a939d920ef807dd3a290b25c998900b26f9e66a4941a032a7266071dd9a\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/MinterRole.sol\":{\"keccak256\":\"0xcaa1d3378adead7d550f10bb7f5c00b85803306805ac1c3589f87c64a5419b9f\",\"urls\":[\"bzzr://ea23efd0b074a3c318ab794eeccde06a12bbc0fa78cfe1681e4a6e5666a7cf1f\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/Registry.sol\":{\"keccak256\":\"0xf5753d90a83e8cfb72f6c1a3bc4ed0fa5a5ad9bc4eed8947c37a203328b74708\",\"urls\":[\"bzzr://f8000ded6289058961e1e5c3e3e9192795172d9b8eb9fef79abc777275073f2b\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/RegulatorService.sol\":{\"keccak256\":\"0x96047c855a1e8e223785e1d7a55b87ced618abb777cb2801a945542982e3c22c\",\"urls\":[\"bzzr://3eea591b087c122f2b490e54b41e4284c7d5c93f5f33b173c8f2cd8b3f0413d4\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/SafeMathInt.sol\":{\"keccak256\":\"0x61f8d21331a1fab7687054ba9d49afbf754090018a473ec0245f33dee059e921\",\"urls\":[\"bzzr://25ad554465d6e4d7fb244637654c0c2db7f4f9b7eb6ae904ef2f4d1698449ba6\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/SafeMathUint.sol\":{\"keccak256\":\"0x0af10c7dc7f239c92969ae77ae1f17929b816cb5079adb11ddc50f916d87a886\",\"urls\":[\"bzzr://19818e64cd54868b16b8a7fb9460fba30d4fea3ce355743059f2417b815fe579\"]},\"/C/Users/mauri/Documents/TFGtokenRepo/contracts/SecurityToken.sol\":{\"keccak256\":\"0xb2623fb89b9eba127991e02b0bf830c7b2beac1aed6b590c0b55b5e5ab44b91d\",\"urls\":[\"bzzr://02e45712f4a70fdec435cf5fa42930a61f4120162f569e624233c5e11463c164\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620029a8380380620029a8833981018060405260608110156200003757600080fd5b810190808051906020019092919080516401000000008111156200005a57600080fd5b828101905060208101848111156200007157600080fd5b81518560018202830111640100000000821117156200008f57600080fd5b50509291906020018051640100000000811115620000ac57600080fd5b82810190506020810184811115620000c357600080fd5b8151856001820283011164010000000082111715620000e157600080fd5b505092919050505081816012620000fe33620001d360201b60201c565b826007908051906020019062000116929190620003f8565b5081600890805190602001906200012f929190620003f8565b5080600960006101000a81548160ff021916908360ff160217905550505050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200018957600080fd5b82600960016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620004a7565b620001ee8160036200023460201b62001f4d1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6200024682826200031860201b60201c565b15620002ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620003a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620029866022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200043b57805160ff19168380011785556200046c565b828001600101855582156200046c579182015b828111156200046b5782518255916020019190600101906200044e565b5b5090506200047b91906200047f565b5090565b620004a491905b80821115620004a057600081600090555060010162000486565b5090565b90565b6124cf80620004b76000396000f3fe60806040526004361061014b5760003560e01c80637b103999116100b6578063a8b9d2401161006f578063a8b9d24014610770578063a9059cbb146107d5578063aa271e1a14610848578063aafd847a146108b1578063cdb80c5114610916578063dd62ed3e1461096d5761014b565b80637b1039991461054957806391b89fba146105a057806395d89b4114610605578063983b2d561461069557806398650275146106e6578063a457c2d7146106fd5761014b565b8063313ce56711610108578063313ce5671461038557806339509351146103b657806340c10f19146104295780636a4740021461049c57806370a08231146104b35780637af78fab146105185761014b565b806303c833021461015557806306fdde031461015f578063095ea7b3146101ef57806318160ddd1461026257806323b872dd1461028d57806327ce014714610320575b6101536109f2565b005b61015d6109f2565b005b34801561016b57600080fd5b50610174610aae565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b4578082015181840152602081019050610199565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fb57600080fd5b506102486004803603604081101561021257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b50565b604051808215151515815260200191505060405180910390f35b34801561026e57600080fd5b50610277610b67565b6040518082815260200191505060405180910390f35b34801561029957600080fd5b50610306600480360360608110156102b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b71565b604051808215151515815260200191505060405180910390f35b34801561032c57600080fd5b5061036f6004803603602081101561034357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba1565b6040518082815260200191505060405180910390f35b34801561039157600080fd5b5061039a610c42565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103c257600080fd5b5061040f600480360360408110156103d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c59565b604051808215151515815260200191505060405180910390f35b34801561043557600080fd5b506104826004803603604081101561044c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cfe565b604051808215151515815260200191505060405180910390f35b3480156104a857600080fd5b506104b1610d72565b005b3480156104bf57600080fd5b50610502600480360360208110156104d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eb6565b6040518082815260200191505060405180910390f35b34801561052457600080fd5b5061052d610efe565b604051808260ff1660ff16815260200191505060405180910390f35b34801561055557600080fd5b5061055e610f03565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105ac57600080fd5b506105ef600480360360208110156105c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f29565b6040518082815260200191505060405180910390f35b34801561061157600080fd5b5061061a610f3b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561065a57808201518184015260208101905061063f565b50505050905090810190601f1680156106875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106a157600080fd5b506106e4600480360360208110156106b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdd565b005b3480156106f257600080fd5b506106fb611047565b005b34801561070957600080fd5b506107566004803603604081101561072057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611052565b604051808215151515815260200191505060405180910390f35b34801561077c57600080fd5b506107bf6004803603602081101561079357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110f7565b6040518082815260200191505060405180910390f35b3480156107e157600080fd5b5061082e600480360360408110156107f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061115a565b604051808215151515815260200191505060405180910390f35b34801561085457600080fd5b506108976004803603602081101561086b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611188565b604051808215151515815260200191505060405180910390f35b3480156108bd57600080fd5b50610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a5565b6040518082815260200191505060405180910390f35b34801561092257600080fd5b5061092b6111ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097957600080fd5b506109dc6004803603604081101561099057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611298565b6040518082815260200191505060405180910390f35b60006109fc610b67565b11610a0657600080fd5b6000341115610aac57610a57610a1a610b67565b610a3e7001000000000000000000000000000000003461131f90919063ffffffff16565b81610a4557fe5b046004546113a590919063ffffffff16565b6004819055503373ffffffffffffffffffffffffffffffffffffffff167fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511346040518082815260200191505060405180910390a25b565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b465780601f10610b1b57610100808354040283529160200191610b46565b820191906000526020600020905b815481529060010190602001808311610b2957829003601f168201915b5050505050905090565b6000610b5d33848461142d565b6001905092915050565b6000600254905090565b6000610b7e848484611624565b15610b9557610b8e8484846117de565b9050610b9a565b600090505b9392505050565b6000700100000000000000000000000000000000610c33610c2e600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c20610c1b610c0a88610eb6565b60045461131f90919063ffffffff16565b61188f565b6118ac90919063ffffffff16565b6118ee565b81610c3a57fe5b049050919050565b6000600960009054906101000a900460ff16905090565b6000610cf43384610cef85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113a590919063ffffffff16565b61142d565b6001905092915050565b6000610d0933611188565b610d5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123c76030913960400191505060405180910390fd5b610d688383611905565b6001905092915050565b6000610d7d336110f7565b90506000811115610eb357610dda81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113a590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610eb1573d6000803e3d6000fd5b505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b601281565b600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f34826110f7565b9050919050565b606060088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fd35780601f10610fa857610100808354040283529160200191610fd3565b820191906000526020600020905b815481529060010190602001808311610fb657829003601f168201915b5050505050905090565b610fe633611188565b61103b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123c76030913960400191505060405180910390fd5b611044816119c4565b50565b61105033611a1e565b565b60006110ed33846110e885600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a7890919063ffffffff16565b61142d565b6001905092915050565b6000611153600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461114584610ba1565b611a7890919063ffffffff16565b9050919050565b6000611167338484611624565b1561117d576111768383611b01565b9050611182565b600090505b92915050565b600061119e826003611b1890919063ffffffff16565b9050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d598d4c96040518163ffffffff1660e01b815260040160206040518083038186803b15801561125857600080fd5b505afa15801561126c573d6000803e3d6000fd5b505050506040513d602081101561128257600080fd5b8101908080519060200190929190505050905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080831415611332576000905061139f565b600082840290508284828161134357fe5b041461139a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806124186021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015611423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156114b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806124806024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611539576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123a56022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008061162f6111ee565b73ffffffffffffffffffffffffffffffffffffffff16634277b5b1308787876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050602060405180830381600087803b15801561171d57600080fd5b505af1158015611731573d6000803e3d6000fd5b505050506040513d602081101561174757600080fd5b810190808051906020019092919050505090508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fb493f829499e8f7094fff2c3bae9b4618f9dfbb4730fab37007f6c504aeb5aeb8386604051808360ff1660ff1681526020018281526020019250505060405180910390a360008160ff16149150509392505050565b60006117eb848484611bf6565b611884843361187f85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a7890919063ffffffff16565b61142d565b600190509392505050565b60008082905060008112156118a357600080fd5b80915050919050565b6000808284019050600083121580156118c55750838112155b806118db57506000831280156118da57508381125b5b6118e457600080fd5b8091505092915050565b6000808212156118fd57600080fd5b819050919050565b61190f8282611d52565b61197d61192f61192a8360045461131f90919063ffffffff16565b61188f565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f0d90919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6119d8816003611f4d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b611a3281600361202890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600082821115611af0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000611b0e338484611bf6565b6001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806124396022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611c018383836120e5565b6000611c20611c1b8360045461131f90919063ffffffff16565b61188f565b9050611c7481600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ac90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d0981600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f0d90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611df5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611e0a816002546113a590919063ffffffff16565b600281905550611e61816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113a590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808212158015611f2157508282840313155b80611f395750600082128015611f38575082828403135b5b611f4257600080fd5b818303905092915050565b611f578282611b18565b15611fca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6120328282611b18565b612087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123f76021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561216b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061245b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806123826023913960400191505060405180910390fd5b612242816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a7890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122d5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113a590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a72305820d3a39506dda7e1321e3b9e79c61592e29100610aed6d479db8ae043f85345ed40029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "",
  "sourceMap": "860:3069:15:-;;;1650:216;8:9:-1;5:2;;;30:1;27;20:12;5:2;1650:216:15;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1650:216:15;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;1650:216:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;1650:216:15;;;;;;1752:5;1759:7;1050:2;274:22:7;285:10;274;;;:22;;:::i;:::-;512:4:3;504:5;:12;;;;;;;;;;;;:::i;:::-;;536:6;526:7;:16;;;;;;;;;;;;:::i;:::-;;564:8;552:9;;:20;;;;;;;;;;;;;;;;;;416:163;;;1831:1:15;1801:32;;1809:9;1801:32;;;;1793:41;;;;;;1852:9;1841:8;;:20;;;;;;;;;;;;;;;;;;1650:216;;;860:3069;;736:119:7;792:21;805:7;792:8;:12;;;;;;:21;;;;:::i;:::-;840:7;828:20;;;;;;;;;;;;736:119;:::o;260:175:11:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;860:3069:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "860:3069:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:21:0;:19;:21::i;:::-;860:3069:15;3035:296:0;;;:::i;:::-;;644:81:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;644:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:145:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2445:145:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2445:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1506:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1506:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2652:223:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2652:223:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2652:223:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5307:235:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5307:235:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5307:235:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1478:81:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1478:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3694:203:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3694:203:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3694:203:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;485:140:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;485:140:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;485:140:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3496:370:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3496:370:0;;;:::i;:::-;;1653:108:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1653:108:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1653:108:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1010:42:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1010:42:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1405:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1405:24:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4072:113:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4072:113:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4072:113:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;838:85:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:85:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;838:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:90:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:90:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;559:90:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;655:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;655:75:7;;;:::i;:::-;;4384:213:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4384:213:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4384:213:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4391:157:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4391:157:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4391:157:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2138:198:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2138:198:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2138:198:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;446:107:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;446:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;446:107:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4756:118:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4756:118:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4756:118:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3814:113:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3814:113:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2175:132:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2175:132:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2175:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3035:296:0;3111:1;3095:13;:11;:13::i;:::-;:17;3087:26;;;;;;3136:1;3124:9;:13;3120:207;;;3175:89;3243:13;:11;:13::i;:::-;3214:26;991:6;3215:9;3214:15;;:26;;;;:::i;:::-;:42;;;;;;3175:25;;:29;;:89;;;;:::i;:::-;3147:25;:117;;;;3298:10;3277:43;;;3310:9;3277:43;;;;;;;;;;;;;;;;;;3120:207;3035:296::o;644:81:3:-;681:13;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2445:145:2:-;2510:4;2526:36;2535:10;2547:7;2556:5;2526:8;:36::i;:::-;2579:4;2572:11;;2445:145;;;;:::o;1506:89::-;1550:7;1576:12;;1569:19;;1506:89;:::o;2652:223:15:-;2734:4;2750:26;2757:5;2764:3;2769:6;2750;:26::i;:::-;2746:125;;;2793:38;2812:5;2819:3;2824:6;2793:18;:38::i;:::-;2786:45;;;;2746:125;2859:5;2852:12;;2652:223;;;;;;:::o;5307:235:0:-;5375:7;991:6;5397:128;:112;5472:28;:36;5501:6;5472:36;;;;;;;;;;;;;;;;5397:63;:48;5427:17;5437:6;5427:9;:17::i;:::-;5397:25;;:29;;:48;;;;:::i;:::-;:61;:63::i;:::-;:74;;:112;;;;:::i;:::-;:126;:128::i;:::-;:140;;;;;;5390:147;;5307:235;;;:::o;1478:81:3:-;1519:5;1543:9;;;;;;;;;;;1536:16;;1478:81;:::o;3694:203:2:-;3774:4;3790:79;3799:10;3811:7;3820:48;3857:10;3820:11;:23;3832:10;3820:23;;;;;;;;;;;;;;;:32;3844:7;3820:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3790:8;:79::i;:::-;3886:4;3879:11;;3694:203;;;;:::o;485:140:4:-;559:4;349:20:7;358:10;349:8;:20::i;:::-;341:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:22:4;581:7;590:6;575:5;:22::i;:::-;614:4;607:11;;485:140;;;;:::o;3496:370:0:-;3537:29;3569:34;3592:10;3569:22;:34::i;:::-;3537:66;;3637:1;3613:21;:25;3609:253;;;3681:57;3716:21;3681:18;:30;3700:10;3681:30;;;;;;;;;;;;;;;;:34;;:57;;;;:::i;:::-;3648:18;:30;3667:10;3648:30;;;;;;;;;;;;;;;:90;;;;3769:10;3751:52;;;3781:21;3751:52;;;;;;;;;;;;;;;;;;3812:10;3811:21;;:44;3833:21;3811:44;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3811:44:0;3609:253;3496:370;:::o;1653:108:2:-;1710:7;1736:9;:18;1746:7;1736:18;;;;;;;;;;;;;;;;1729:25;;1653:108;;;:::o;1010:42:15:-;1050:2;1010:42;:::o;1405:24::-;;;;;;;;;;;;;:::o;4072:113:0:-;4128:7;4150:30;4173:6;4150:22;:30::i;:::-;4143:37;;4072:113;;;:::o;838:85:3:-;877:13;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:85;:::o;559:90:7:-;349:20;358:10;349:8;:20::i;:::-;341:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:19;634:7;623:10;:19::i;:::-;559:90;:::o;655:75::-;698:25;712:10;698:13;:25::i;:::-;655:75::o;4384:213:2:-;4469:4;4485:84;4494:10;4506:7;4515:53;4552:15;4515:11;:23;4527:10;4515:23;;;;;;;;;;;;;;;:32;4539:7;4515:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4485:8;:84::i;:::-;4586:4;4579:11;;4384:213;;;;:::o;4391:157:0:-;4459:7;4481:62;4516:18;:26;4535:6;4516:26;;;;;;;;;;;;;;;;4481:30;4504:6;4481:22;:30::i;:::-;:34;;:62;;;;:::i;:::-;4474:69;;4391:157;;;:::o;2138:198:15:-;2201:4;2217:31;2224:10;2236:3;2241:6;2217;:31::i;:::-;2213:119;;;2265:27;2280:3;2285:6;2265:14;:27::i;:::-;2258:34;;;;2213:119;2320:5;2313:12;;2138:198;;;;;:::o;446:107:7:-;502:4;525:21;538:7;525:8;:12;;:21;;;;:::i;:::-;518:28;;446:107;;;:::o;4756:118:0:-;4821:7;4843:18;:26;4862:6;4843:26;;;;;;;;;;;;;;;;4836:33;;4756:118;;;:::o;3814:113:15:-;3855:16;3903:8;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3903:18:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3903:18:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3903:18:15;;;;;;;;;;;;;;;;3879:43;;3814:113;:::o;2175:132:2:-;2247:7;2273:11;:18;2285:5;2273:18;;;;;;;;;;;;;;;:27;2292:7;2273:27;;;;;;;;;;;;;;;;2266:34;;2175:132;;;;:::o;1693:458:12:-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;7109:329:2:-;7218:1;7201:19;;:5;:19;;;;7193:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7298:1;7279:21;;:7;:21;;;;7271:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7380:5;7350:11;:18;7362:5;7350:18;;;;;;;;;;;;;;;:27;7369:7;7350:27;;;;;;;;;;;;;;;:35;;;;7416:7;7400:31;;7409:5;7400:31;;;7425:5;7400:31;;;;;;;;;;;;;;;;;;7109:329;;;:::o;3256:235:15:-;3333:4;3344:12;3359:10;:8;:10::i;:::-;:16;;;3384:4;3391:5;3398:3;3403:6;3359:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3359:51:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3359:51:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3359:51:15;;;;;;;;;;;;;;;;3344:66;;3449:3;3422:39;;3442:5;3422:39;;;3434:6;3454;3422:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;3485:1;3475:6;:11;;;3468:18;;;3256:235;;;;;:::o;3047:252:2:-;3136:4;3152:36;3162:6;3170:9;3181:6;3152:9;:36::i;:::-;3198:73;3207:6;3215:10;3227:43;3263:6;3227:11;:19;3239:6;3227:19;;;;;;;;;;;;;;;:31;3247:10;3227:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3198:8;:73::i;:::-;3288:4;3281:11;;3047:252;;;;;:::o;145:130:14:-;201:6;215:8;233:1;215:20;;254:1;249;:6;;241:15;;;;;;269:1;262:8;;;145:130;;;:::o;1102:158:13:-;1158:6;1172:8;1187:1;1183;:5;1172:16;;1208:1;1203;:6;;:16;;;;;1218:1;1213;:6;;1203:16;1202:38;;;;1229:1;1225;:5;:14;;;;;1238:1;1234;:5;1225:14;1202:38;1194:47;;;;;;1254:1;1247:8;;;1102:158;;;;:::o;1264:114::-;1320:7;1348:1;1343;:6;;1335:15;;;;;;1371:1;1356:17;;1264:114;;;:::o;6481:246:0:-;6543:27;6555:7;6564:5;6543:11;:27::i;:::-;6617:105;6667:53;6668:36;6698:5;6668:25;;:29;;:36;;;;:::i;:::-;6667:51;:53::i;:::-;6617:28;:37;6646:7;6617:37;;;;;;;;;;;;;;;;:48;;:105;;;;:::i;:::-;6577:28;:37;6606:7;6577:37;;;;;;;;;;;;;;;:145;;;;6481:246;;:::o;736:119:7:-;792:21;805:7;792:8;:12;;:21;;;;:::i;:::-;840:7;828:20;;;;;;;;;;;;736:119;:::o;861:127::-;920:24;936:7;920:8;:15;;:24;;;;:::i;:::-;973:7;959:22;;;;;;;;;;;;861:127;:::o;1274:179:12:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;1964:153:2:-;2033:4;2049:40;2059:10;2071:9;2082:6;2049:9;:40::i;:::-;2106:4;2099:11;;1964:153;;;;:::o;779:200:11:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;5837:384:0:-;5912:32;5928:4;5934:2;5938:5;5912:15;:32::i;:::-;5951:21;5975:51;:36;6005:5;5975:25;;:29;;:36;;;;:::i;:::-;:49;:51::i;:::-;5951:75;;6069:54;6108:14;6069:28;:34;6098:4;6069:34;;;;;;;;;;;;;;;;:38;;:54;;;;:::i;:::-;6032:28;:34;6061:4;6032:34;;;;;;;;;;;;;;;:91;;;;6164:52;6201:14;6164:28;:32;6193:2;6164:32;;;;;;;;;;;;;;;;:36;;:52;;;;:::i;:::-;6129:28;:32;6158:2;6129:32;;;;;;;;;;;;;;;:87;;;;5837:384;;;;:::o;5763:302:2:-;5857:1;5838:21;;:7;:21;;;;5830:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5921:24;5938:6;5921:12;;:16;;:24;;;;:::i;:::-;5906:12;:39;;;;5976:30;5999:6;5976:9;:18;5986:7;5976:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;5955:9;:18;5965:7;5955:18;;;;;;;;;;;;;;;:51;;;;6042:7;6021:37;;6038:1;6021:37;;;6051:6;6021:37;;;;;;;;;;;;;;;;;;5763:302;;:::o;949:149:13:-;1005:6;1033:1;1028;:6;;:20;;;;;1047:1;1042;1038;:5;:10;;1028:20;1027:46;;;;1058:1;1054;:5;:18;;;;;1071:1;1067;1063;:5;:9;1054:18;1027:46;1019:55;;;;;;1092:1;1088;:5;1081:12;;949:149;;;;:::o;260:175:11:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;5071:422:2:-;5186:1;5168:20;;:6;:20;;;;5160:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5269:1;5248:23;;:9;:23;;;;5240:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5342:29;5364:6;5342:9;:17;5352:6;5342:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5322:9;:17;5332:6;5322:17;;;;;;;;;;;;;;;:49;;;;5404:32;5429:6;5404:9;:20;5414:9;5404:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5381:9;:20;5391:9;5381:20;;;;;;;;;;;;;;;:55;;;;5468:9;5451:35;;5460:6;5451:35;;;5479:6;5451:35;;;;;;;;;;;;;;;;;;5071:422;;;:::o",
  "source": "/**\n   Copyright (c) 2017 Harbor Platform, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the “License”);\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an “AS IS” BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\npragma solidity ^0.5.0;\n\nimport './ERC20Detailed.sol';\nimport './ERC20Mintable.sol';\nimport './DividendEngine.sol';\nimport './Registry.sol';\nimport './RegulatorService.sol';\n\n/// @notice An ERC-20 token that has the ability to check for trade validity\ncontract SecurityToken is DividendEngine, ERC20Detailed {\n\n  /**\n   * @notice R-Token decimals setting (used when constructing DetailedERC20)\n   */\n  uint8 constant public RTOKEN_DECIMALS = 18;\n\n  /**\n   * @notice Triggered when regulator checks pass or fail\n   */\n  event CheckStatus(uint8 reason, address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @notice Address of the `ServiceRegistry` that has the location of the\n   *         `RegulatorService` contract responsible for checking trade\n   *         permissions.\n   */\n  Registry public registry;\n\n  /**\n   * @notice Constructor\n   *\n   * @param _registry Address of `ServiceRegistry` contract\n   * @param _name Name of the token: See DetailedERC20\n   * @param _symbol Symbol of the token: See DetailedERC20\n   */\n  constructor (Registry _registry, string memory _name, string memory _symbol) public\n    ERC20Detailed(_name, _symbol, RTOKEN_DECIMALS)\n  {\n    require(address(_registry) != address(0));\n\n    registry = _registry;\n  }\n\n  /**\n   * @notice ERC-20 overridden function that include logic to check for trade validity.\n   *\n   * @param _to The address of the receiver\n   * @param _value The number of tokens to transfer\n   *\n   * @return `true` if successful and `false` if unsuccessful\n   */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    if (_check(msg.sender, _to, _value)) {\n      return super.transfer(_to, _value);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @notice ERC-20 overridden function that include logic to check for trade validity.\n   *\n   * @param _from The address of the sender\n   * @param _to The address of the receiver\n   * @param _value The number of tokens to transfer\n   *\n   * @return `true` if successful and `false` if unsuccessful\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    if (_check(_from, _to, _value)) {\n      return super.transferFrom(_from, _to, _value);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @notice Performs the regulator check\n   *\n   * @dev This method raises a CheckStatus event indicating success or failure of the check\n   *\n   * @param _from The address of the sender\n   * @param _to The address of the receiver\n   * @param _value The number of tokens to transfer\n   *\n   * @return `true` if the check was successful and `false` if unsuccessful\n   */\n  function _check(address _from, address _to, uint256 _value) private returns (bool){\n    uint8 reason = _service().check(address(this), _from, _to, _value);\n\n    emit CheckStatus(reason, _from, _to, _value);\n\n    return reason == 0;\n  }\n\n  /**\n   * @notice Retreives the address of the `RegulatorService` that manages this token.\n   *\n   * @dev This function *MUST NOT* memoize the `RegulatorService` address.  This would\n   *      break the ability to upgrade the `RegulatorService`.\n   *\n   * @return The `RegulatorService` that manages this token.\n   */\n  function _service() view public returns (RegulatorService) {\n    return RegulatorService(registry.service());\n  }\n}\n",
  "sourcePath": "C:\\Users\\mauri\\Documents\\TFGtokenRepo\\contracts\\SecurityToken.sol",
  "ast": {
    "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/SecurityToken.sol",
    "exportedSymbols": {
      "SecurityToken": [
        1850
      ]
    },
    "id": 1851,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1692,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:23:15"
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/ERC20Detailed.sol",
        "file": "./ERC20Detailed.sol",
        "id": 1693,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 808,
        "src": "633:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 1694,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 836,
        "src": "663:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/DividendEngine.sol",
        "file": "./DividendEngine.sol",
        "id": 1695,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 304,
        "src": "693:30:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/Registry.sol",
        "file": "./Registry.sol",
        "id": 1696,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 1242,
        "src": "724:24:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/RegulatorService.sol",
        "file": "./RegulatorService.sol",
        "id": 1697,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 1258,
        "src": "749:32:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1698,
              "name": "DividendEngine",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 303,
              "src": "886:14:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendEngine_$303",
                "typeString": "contract DividendEngine"
              }
            },
            "id": 1699,
            "nodeType": "InheritanceSpecifier",
            "src": "886:14:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1700,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 807,
              "src": "902:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$807",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1701,
            "nodeType": "InheritanceSpecifier",
            "src": "902:13:15"
          }
        ],
        "contractDependencies": [
          303,
          352,
          749,
          807,
          835,
          904,
          1065
        ],
        "contractKind": "contract",
        "documentation": "@notice An ERC-20 token that has the ability to check for trade validity",
        "fullyImplemented": true,
        "id": 1850,
        "linearizedBaseContracts": [
          1850,
          807,
          303,
          352,
          835,
          1065,
          749,
          904
        ],
        "name": "SecurityToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1704,
            "name": "RTOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1850,
            "src": "1010:42:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1702,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1010:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1703,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1050:2:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when regulator checks pass or fail",
            "id": 1714,
            "name": "CheckStatus",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "indexed": false,
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1145:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1708,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1159:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1710,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1181:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1712,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1201:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1144:71:15"
            },
            "src": "1127:89:15"
          },
          {
            "constant": false,
            "id": 1716,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 1850,
            "src": "1405:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$1241",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 1715,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1241,
              "src": "1405:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$1241",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1744,
              "nodeType": "Block",
              "src": "1787:79:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1732,
                              "name": "_registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1718,
                              "src": "1809:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Registry_$1241",
                                "typeString": "contract Registry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Registry_$1241",
                                "typeString": "contract Registry"
                              }
                            ],
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1801:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1801:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1831:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1823:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1823:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1801:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2155,
                        2156
                      ],
                      "referencedDeclaration": 2155,
                      "src": "1793:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1740,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "1841:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$1241",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1741,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1718,
                      "src": "1852:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$1241",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "1841:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$1241",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 1743,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:20:15"
                }
              ]
            },
            "documentation": "@notice Constructor\n   * @param _registry Address of `ServiceRegistry` contract\n@param _name Name of the token: See DetailedERC20\n@param _symbol Symbol of the token: See DetailedERC20",
            "id": 1745,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1725,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1720,
                    "src": "1752:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1726,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1722,
                    "src": "1759:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1727,
                    "name": "RTOKEN_DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1704,
                    "src": "1768:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1728,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1724,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 807,
                  "src": "1738:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$807_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1738:46:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1663:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Registry_$1241",
                    "typeString": "contract Registry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1717,
                    "name": "Registry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "1663:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$1241",
                      "typeString": "contract Registry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1683:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1704:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1662:64:15"
            },
            "returnParameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1787:0:15"
            },
            "scope": 1850,
            "src": "1650:216:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1771,
              "nodeType": "Block",
              "src": "2207:129:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1755,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2152,
                          "src": "2224:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2224:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1757,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1747,
                        "src": "2236:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1758,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "2241:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1754,
                      "name": "_check",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "2217:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2217:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1769,
                    "nodeType": "Block",
                    "src": "2305:27:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2320:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1753,
                        "id": 1768,
                        "nodeType": "Return",
                        "src": "2313:12:15"
                      }
                    ]
                  },
                  "id": 1770,
                  "nodeType": "IfStatement",
                  "src": "2213:119:15",
                  "trueBody": {
                    "id": 1766,
                    "nodeType": "Block",
                    "src": "2250:49:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1762,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1747,
                              "src": "2280:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1763,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1749,
                              "src": "2285:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1760,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "2265:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_SecurityToken_$1850",
                                "typeString": "contract super SecurityToken"
                              }
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 412,
                            "src": "2265:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2265:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1753,
                        "id": 1765,
                        "nodeType": "Return",
                        "src": "2258:34:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ERC-20 overridden function that include logic to check for trade validity.\n   * @param _to The address of the receiver\n@param _value The number of tokens to transfer\n   * @return `true` if successful and `false` if unsuccessful",
            "id": 1772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1747,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2156:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2169:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2155:29:15"
            },
            "returnParameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1752,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2201:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2200:6:15"
            },
            "scope": 1850,
            "src": "2138:198:15",
            "stateMutability": "nonpayable",
            "superFunction": 412,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1800,
              "nodeType": "Block",
              "src": "2740:135:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1784,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "2757:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1785,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1776,
                        "src": "2764:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1786,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "2769:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1783,
                      "name": "_check",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "2750:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1798,
                    "nodeType": "Block",
                    "src": "2844:27:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2859:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1782,
                        "id": 1797,
                        "nodeType": "Return",
                        "src": "2852:12:15"
                      }
                    ]
                  },
                  "id": 1799,
                  "nodeType": "IfStatement",
                  "src": "2746:125:15",
                  "trueBody": {
                    "id": 1795,
                    "nodeType": "Block",
                    "src": "2778:60:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1790,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "2812:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1791,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "2819:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1792,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1778,
                              "src": "2824:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1788,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "2793:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_SecurityToken_$1850",
                                "typeString": "contract super SecurityToken"
                              }
                            },
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 482,
                            "src": "2793:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2793:38:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1782,
                        "id": 1794,
                        "nodeType": "Return",
                        "src": "2786:45:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ERC-20 overridden function that include logic to check for trade validity.\n   * @param _from The address of the sender\n@param _to The address of the receiver\n@param _value The number of tokens to transfer\n   * @return `true` if successful and `false` if unsuccessful",
            "id": 1801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2674:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1776,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2689:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1778,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2702:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2673:44:15"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2734:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2733:6:15"
            },
            "scope": 1850,
            "src": "2652:223:15",
            "stateMutability": "nonpayable",
            "superFunction": 482,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1836,
              "nodeType": "Block",
              "src": "3338:153:15",
              "statements": [
                {
                  "assignments": [
                    1813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1813,
                      "name": "reason",
                      "nodeType": "VariableDeclaration",
                      "scope": 1836,
                      "src": "3344:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1812,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3344:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1824,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1818,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2196,
                            "src": "3384:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SecurityToken_$1850",
                              "typeString": "contract SecurityToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SecurityToken_$1850",
                              "typeString": "contract SecurityToken"
                            }
                          ],
                          "id": 1817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3376:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3376:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1820,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "3391:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1821,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "3398:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1822,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "3403:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1814,
                          "name": "_service",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "3359:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_RegulatorService_$1257_$",
                            "typeString": "function () view returns (contract RegulatorService)"
                          }
                        },
                        "id": 1815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3359:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegulatorService_$1257",
                          "typeString": "contract RegulatorService"
                        }
                      },
                      "id": 1816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "check",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1256,
                      "src": "3359:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,address,uint256) external returns (uint8)"
                      }
                    },
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:51:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3344:66:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1826,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "3434:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1827,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "3442:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1828,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "3449:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1829,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "3454:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1825,
                      "name": "CheckStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "3422:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256)"
                      }
                    },
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1831,
                  "nodeType": "EmitStatement",
                  "src": "3417:44:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1832,
                      "name": "reason",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1813,
                      "src": "3475:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3485:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3475:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1811,
                  "id": 1835,
                  "nodeType": "Return",
                  "src": "3468:18:15"
                }
              ]
            },
            "documentation": "@notice Performs the regulator check\n   * @dev This method raises a CheckStatus event indicating success or failure of the check\n   * @param _from The address of the sender\n@param _to The address of the receiver\n@param _value The number of tokens to transfer\n   * @return `true` if the check was successful and `false` if unsuccessful",
            "id": 1837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_check",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1803,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3272:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1805,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3287:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1807,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3300:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3271:44:15"
            },
            "returnParameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1810,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3333:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1809,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3332:6:15"
            },
            "scope": 1850,
            "src": "3256:235:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1848,
              "nodeType": "Block",
              "src": "3873:54:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1843,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "3903:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$1241",
                              "typeString": "contract Registry"
                            }
                          },
                          "id": 1844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "service",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1184,
                          "src": "3903:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3903:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1842,
                      "name": "RegulatorService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1257,
                      "src": "3886:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_RegulatorService_$1257_$",
                        "typeString": "type(contract RegulatorService)"
                      }
                    },
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3886:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegulatorService_$1257",
                      "typeString": "contract RegulatorService"
                    }
                  },
                  "functionReturnParameters": 1841,
                  "id": 1847,
                  "nodeType": "Return",
                  "src": "3879:43:15"
                }
              ]
            },
            "documentation": "@notice Retreives the address of the `RegulatorService` that manages this token.\n   * @dev This function *MUST NOT* memoize the `RegulatorService` address.  This would\n     break the ability to upgrade the `RegulatorService`.\n   * @return The `RegulatorService` that manages this token.",
            "id": 1849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_service",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3831:2:15"
            },
            "returnParameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1840,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1849,
                  "src": "3855:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RegulatorService_$1257",
                    "typeString": "contract RegulatorService"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1839,
                    "name": "RegulatorService",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1257,
                    "src": "3855:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegulatorService_$1257",
                      "typeString": "contract RegulatorService"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3854:18:15"
            },
            "scope": 1850,
            "src": "3814:113:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1851,
        "src": "860:3069:15"
      }
    ],
    "src": "608:3322:15"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/SecurityToken.sol",
    "exportedSymbols": {
      "SecurityToken": [
        1850
      ]
    },
    "id": 1851,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1692,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:23:15"
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/ERC20Detailed.sol",
        "file": "./ERC20Detailed.sol",
        "id": 1693,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 808,
        "src": "633:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 1694,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 836,
        "src": "663:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/DividendEngine.sol",
        "file": "./DividendEngine.sol",
        "id": 1695,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 304,
        "src": "693:30:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/Registry.sol",
        "file": "./Registry.sol",
        "id": 1696,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 1242,
        "src": "724:24:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mauri/Documents/TFGtokenRepo/contracts/RegulatorService.sol",
        "file": "./RegulatorService.sol",
        "id": 1697,
        "nodeType": "ImportDirective",
        "scope": 1851,
        "sourceUnit": 1258,
        "src": "749:32:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1698,
              "name": "DividendEngine",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 303,
              "src": "886:14:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendEngine_$303",
                "typeString": "contract DividendEngine"
              }
            },
            "id": 1699,
            "nodeType": "InheritanceSpecifier",
            "src": "886:14:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1700,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 807,
              "src": "902:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$807",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1701,
            "nodeType": "InheritanceSpecifier",
            "src": "902:13:15"
          }
        ],
        "contractDependencies": [
          303,
          352,
          749,
          807,
          835,
          904,
          1065
        ],
        "contractKind": "contract",
        "documentation": "@notice An ERC-20 token that has the ability to check for trade validity",
        "fullyImplemented": true,
        "id": 1850,
        "linearizedBaseContracts": [
          1850,
          807,
          303,
          352,
          835,
          1065,
          749,
          904
        ],
        "name": "SecurityToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1704,
            "name": "RTOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1850,
            "src": "1010:42:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1702,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1010:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1703,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1050:2:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when regulator checks pass or fail",
            "id": 1714,
            "name": "CheckStatus",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "indexed": false,
                  "name": "reason",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1145:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1708,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1159:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1710,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1181:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1712,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1714,
                  "src": "1201:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1144:71:15"
            },
            "src": "1127:89:15"
          },
          {
            "constant": false,
            "id": 1716,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 1850,
            "src": "1405:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$1241",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 1715,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1241,
              "src": "1405:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$1241",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1744,
              "nodeType": "Block",
              "src": "1787:79:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1732,
                              "name": "_registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1718,
                              "src": "1809:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Registry_$1241",
                                "typeString": "contract Registry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Registry_$1241",
                                "typeString": "contract Registry"
                              }
                            ],
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1801:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1801:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1831:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1823:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1823:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1801:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2155,
                        2156
                      ],
                      "referencedDeclaration": 2155,
                      "src": "1793:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1740,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "1841:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$1241",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1741,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1718,
                      "src": "1852:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$1241",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "1841:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$1241",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 1743,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:20:15"
                }
              ]
            },
            "documentation": "@notice Constructor\n   * @param _registry Address of `ServiceRegistry` contract\n@param _name Name of the token: See DetailedERC20\n@param _symbol Symbol of the token: See DetailedERC20",
            "id": 1745,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1725,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1720,
                    "src": "1752:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1726,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1722,
                    "src": "1759:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1727,
                    "name": "RTOKEN_DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1704,
                    "src": "1768:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1728,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1724,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 807,
                  "src": "1738:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$807_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1738:46:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1663:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Registry_$1241",
                    "typeString": "contract Registry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1717,
                    "name": "Registry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "1663:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$1241",
                      "typeString": "contract Registry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1683:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "1704:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1662:64:15"
            },
            "returnParameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1787:0:15"
            },
            "scope": 1850,
            "src": "1650:216:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1771,
              "nodeType": "Block",
              "src": "2207:129:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1755,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2152,
                          "src": "2224:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2224:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1757,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1747,
                        "src": "2236:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1758,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "2241:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1754,
                      "name": "_check",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "2217:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2217:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1769,
                    "nodeType": "Block",
                    "src": "2305:27:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2320:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1753,
                        "id": 1768,
                        "nodeType": "Return",
                        "src": "2313:12:15"
                      }
                    ]
                  },
                  "id": 1770,
                  "nodeType": "IfStatement",
                  "src": "2213:119:15",
                  "trueBody": {
                    "id": 1766,
                    "nodeType": "Block",
                    "src": "2250:49:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1762,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1747,
                              "src": "2280:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1763,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1749,
                              "src": "2285:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1760,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "2265:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_SecurityToken_$1850",
                                "typeString": "contract super SecurityToken"
                              }
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 412,
                            "src": "2265:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2265:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1753,
                        "id": 1765,
                        "nodeType": "Return",
                        "src": "2258:34:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ERC-20 overridden function that include logic to check for trade validity.\n   * @param _to The address of the receiver\n@param _value The number of tokens to transfer\n   * @return `true` if successful and `false` if unsuccessful",
            "id": 1772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1747,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2156:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2169:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2155:29:15"
            },
            "returnParameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1752,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2201:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2200:6:15"
            },
            "scope": 1850,
            "src": "2138:198:15",
            "stateMutability": "nonpayable",
            "superFunction": 412,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1800,
              "nodeType": "Block",
              "src": "2740:135:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1784,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "2757:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1785,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1776,
                        "src": "2764:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1786,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "2769:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1783,
                      "name": "_check",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "2750:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1798,
                    "nodeType": "Block",
                    "src": "2844:27:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2859:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1782,
                        "id": 1797,
                        "nodeType": "Return",
                        "src": "2852:12:15"
                      }
                    ]
                  },
                  "id": 1799,
                  "nodeType": "IfStatement",
                  "src": "2746:125:15",
                  "trueBody": {
                    "id": 1795,
                    "nodeType": "Block",
                    "src": "2778:60:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1790,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "2812:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1791,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "2819:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1792,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1778,
                              "src": "2824:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1788,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "2793:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_SecurityToken_$1850",
                                "typeString": "contract super SecurityToken"
                              }
                            },
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 482,
                            "src": "2793:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2793:38:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1782,
                        "id": 1794,
                        "nodeType": "Return",
                        "src": "2786:45:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice ERC-20 overridden function that include logic to check for trade validity.\n   * @param _from The address of the sender\n@param _to The address of the receiver\n@param _value The number of tokens to transfer\n   * @return `true` if successful and `false` if unsuccessful",
            "id": 1801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2674:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1776,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2689:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1778,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2702:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2673:44:15"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "2734:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2733:6:15"
            },
            "scope": 1850,
            "src": "2652:223:15",
            "stateMutability": "nonpayable",
            "superFunction": 482,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1836,
              "nodeType": "Block",
              "src": "3338:153:15",
              "statements": [
                {
                  "assignments": [
                    1813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1813,
                      "name": "reason",
                      "nodeType": "VariableDeclaration",
                      "scope": 1836,
                      "src": "3344:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1812,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3344:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1824,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1818,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2196,
                            "src": "3384:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SecurityToken_$1850",
                              "typeString": "contract SecurityToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SecurityToken_$1850",
                              "typeString": "contract SecurityToken"
                            }
                          ],
                          "id": 1817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3376:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3376:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1820,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "3391:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1821,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "3398:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1822,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "3403:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1814,
                          "name": "_service",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "3359:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_RegulatorService_$1257_$",
                            "typeString": "function () view returns (contract RegulatorService)"
                          }
                        },
                        "id": 1815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3359:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegulatorService_$1257",
                          "typeString": "contract RegulatorService"
                        }
                      },
                      "id": 1816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "check",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1256,
                      "src": "3359:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,address,uint256) external returns (uint8)"
                      }
                    },
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:51:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3344:66:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1826,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "3434:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1827,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "3442:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1828,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "3449:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1829,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "3454:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1825,
                      "name": "CheckStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "3422:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256)"
                      }
                    },
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1831,
                  "nodeType": "EmitStatement",
                  "src": "3417:44:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1832,
                      "name": "reason",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1813,
                      "src": "3475:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3485:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3475:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1811,
                  "id": 1835,
                  "nodeType": "Return",
                  "src": "3468:18:15"
                }
              ]
            },
            "documentation": "@notice Performs the regulator check\n   * @dev This method raises a CheckStatus event indicating success or failure of the check\n   * @param _from The address of the sender\n@param _to The address of the receiver\n@param _value The number of tokens to transfer\n   * @return `true` if the check was successful and `false` if unsuccessful",
            "id": 1837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_check",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1803,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3272:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1805,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3287:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1807,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3300:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3271:44:15"
            },
            "returnParameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1810,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "3333:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1809,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3332:6:15"
            },
            "scope": 1850,
            "src": "3256:235:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1848,
              "nodeType": "Block",
              "src": "3873:54:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1843,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "3903:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$1241",
                              "typeString": "contract Registry"
                            }
                          },
                          "id": 1844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "service",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1184,
                          "src": "3903:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3903:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1842,
                      "name": "RegulatorService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1257,
                      "src": "3886:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_RegulatorService_$1257_$",
                        "typeString": "type(contract RegulatorService)"
                      }
                    },
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3886:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegulatorService_$1257",
                      "typeString": "contract RegulatorService"
                    }
                  },
                  "functionReturnParameters": 1841,
                  "id": 1847,
                  "nodeType": "Return",
                  "src": "3879:43:15"
                }
              ]
            },
            "documentation": "@notice Retreives the address of the `RegulatorService` that manages this token.\n   * @dev This function *MUST NOT* memoize the `RegulatorService` address.  This would\n     break the ability to upgrade the `RegulatorService`.\n   * @return The `RegulatorService` that manages this token.",
            "id": 1849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_service",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3831:2:15"
            },
            "returnParameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1840,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1849,
                  "src": "3855:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RegulatorService_$1257",
                    "typeString": "contract RegulatorService"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1839,
                    "name": "RegulatorService",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1257,
                    "src": "3855:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegulatorService_$1257",
                      "typeString": "contract RegulatorService"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3854:18:15"
            },
            "scope": 1850,
            "src": "3814:113:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1851,
        "src": "860:3069:15"
      }
    ],
    "src": "608:3322:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xb493f829499e8f7094fff2c3bae9b4618f9dfbb4730fab37007f6c504aeb5aeb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "reason",
              "type": "uint8"
            },
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "CheckStatus",
          "type": "event",
          "signature": "0xb493f829499e8f7094fff2c3bae9b4618f9dfbb4730fab37007f6c504aeb5aeb"
        },
        "0xa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "weiAmount",
              "type": "uint256"
            }
          ],
          "name": "DividendsDistributed",
          "type": "event",
          "signature": "0xa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511"
        },
        "0xee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "weiAmount",
              "type": "uint256"
            }
          ],
          "name": "DividendWithdrawn",
          "type": "event",
          "signature": "0xee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x40621E97EF61AC138e4BBcE08148896B52c22F25",
      "transactionHash": "0x3070b16eac61cad5cbcd5dbcbef6d3d3b1930bf989f17abc806c7ee0aaab4a58"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-19T14:58:52.460Z",
  "devdoc": {
    "methods": {
      "_service()": {
        "details": "This function *MUST NOT* memoize the `RegulatorService` address.  This would     break the ability to upgrade the `RegulatorService`.",
        "return": "The `RegulatorService` that manages this token."
      },
      "accumulativeDividendOf(address)": {
        "details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude",
        "params": {
          "_owner": "The address of a token holder."
        },
        "return": "The amount of dividend in wei that `_owner` has earned in total."
      },
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "constructor": {
        "params": {
          "_name": "Name of the token: See DetailedERC20",
          "_registry": "Address of `ServiceRegistry` contract",
          "_symbol": "Symbol of the token: See DetailedERC20"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "distributeDividends()": {
        "details": "It reverts if the total supply of tokens is 0. It emits the `DividendsDistributed` event if the amount of received ether is greater than 0. About undistributed ether:   In each distribution, there is a small amount of ether not distributed,     the magnified amount of which is     `(msg.value * magnitude) % totalSupply()`.   With a well-chosen `magnitude`, the amount of undistributed ether     (de-magnified) in a distribution can be less than 1 wei.   We can actually keep track of the undistributed ether in a distribution     and try to distribute it in the next distribution,     but keeping track of such data on-chain costs much more than     the saved ether, so we don't do that."
      },
      "dividendOf(address)": {
        "params": {
          "_owner": "The address of a token holder."
        },
        "return": "The amount of dividend in wei that `_owner` can withdraw."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "params": {
          "_to": "The address of the receiver",
          "_value": "The number of tokens to transfer"
        },
        "return": "`true` if successful and `false` if unsuccessful"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_from": "The address of the sender",
          "_to": "The address of the receiver",
          "_value": "The number of tokens to transfer"
        },
        "return": "`true` if successful and `false` if unsuccessful"
      },
      "withdrawDividend()": {
        "details": "It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
      },
      "withdrawableDividendOf(address)": {
        "params": {
          "_owner": "The address of a token holder."
        },
        "return": "The amount of dividend in wei that `_owner` can withdraw."
      },
      "withdrawnDividendOf(address)": {
        "params": {
          "_owner": "The address of a token holder."
        },
        "return": "The amount of dividend in wei that `_owner` has withdrawn."
      }
    }
  },
  "userdoc": {
    "methods": {
      "_service()": {
        "notice": "Retreives the address of the `RegulatorService` that manages this token."
      },
      "accumulativeDividendOf(address)": {
        "notice": "View the amount of dividend in wei that an address has earned in total."
      },
      "constructor": "Constructor",
      "distributeDividends()": {
        "notice": "Distributes ether to token holders as dividends."
      },
      "dividendOf(address)": {
        "notice": "View the amount of dividend in wei that an address can withdraw."
      },
      "transfer(address,uint256)": {
        "notice": "ERC-20 overridden function that include logic to check for trade validity."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "ERC-20 overridden function that include logic to check for trade validity."
      },
      "withdrawDividend()": {
        "notice": "Withdraws the ether distributed to the sender."
      },
      "withdrawableDividendOf(address)": {
        "notice": "View the amount of dividend in wei that an address can withdraw."
      },
      "withdrawnDividendOf(address)": {
        "notice": "View the amount of dividend in wei that an address has withdrawn."
      }
    },
    "notice": "An ERC-20 token that has the ability to check for trade validity"
  }
}